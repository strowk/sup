[env]
CACHE_TO = { value = "type=local,dest=../../docker-cache", condition = { env_not_set = [
    "CACHE_TO",
] } }
CACHE_FROM = { value = "type=local,src=../../docker-cache", condition = { env_not_set = [
    "CACHE_FROM",
] } }

[tasks.install-changelog-lint-deps]
script_runner = "@shell"
cwd = "changelog"
script = '''
npm ci --silent
'''

[tasks.lint-changelog]
dependencies = ["install-changelog-lint-deps"]
command = "node"
args = ["./changelog/lint.mjs"]

[tasks.install]
command = "cargo"
args = ["install", "--path", "./"]

# Cross builds for linux, windows and mac

[tasks.install-cross]
command = "cargo"
args = ["install", "cross", "--git", "https://github.com/cross-rs/cross"]

[tasks.build-all]
dependencies = [
    "build-linux_x86_64",
    "build-linux_arm",
    "build-linux_x86_64_musl",
    "build-linux_arm_musl",
    "build-windows_x86_64",
    "build-mac_x86_64",
    "build-mac_arm",
]

[tasks.get-version-for-github]
command = "bash"
args = [
    "-c",
    "echo CARGO_BUILD_VERSION=${CARGO_MAKE_PROJECT_VERSION} >> $GITHUB_OUTPUT",
]

# Building binaries for linux

[tasks.build-linux_x86_64]
command = "cross"
args = ["build", "--target", "x86_64-unknown-linux-gnu", "--release"]

[tasks.build-linux_x86_64_profiling]
command = "cross"
args = [
    "build",
    "--target",
    "x86_64-unknown-linux-gnu",
    "--profile",
    "profiling",
]

[tasks.build-linux_arm]
command = "cross"
args = ["build", "--target", "aarch64-unknown-linux-gnu", "--release"]

[tasks.build-linux_x86_64_musl]
command = "cross"
args = ["build", "--target", "x86_64-unknown-linux-musl", "--release"]

[tasks.build-linux_arm_musl]
command = "cross"
args = ["build", "--target", "aarch64-unknown-linux-musl", "--release"]

# Building binary for windows x86_64

[tasks.build-windows_x86_64]
command = "cross"
args = ["build", "--target", "x86_64-pc-windows-gnu", "--release"]

# Building binaries for MacOS

[tasks.get-cross]
dependencies = ["clone-cross", "checkout-cross"]

[tasks.clone-cross]
condition = { files_not_exist = ["${CARGO_MAKE_WORKING_DIRECTORY}/cross"] }
command = "git"
args = ["clone", "https://github.com/cross-rs/cross.git"]

[tasks.checkout-cross]
cwd = "./cross"
command = "git"
args = ["checkout", "3bfc6d54c817a2991f610d258f3290906c97474f"]

[tasks.get-cross-toolchains]
dependencies = ["get-cross"]
command = "git"
condition = { files_not_exist = [
    "${CARGO_MAKE_WORKING_DIRECTORY}/docker/cross-toolchains/README.md",
] }
cwd = "./cross"
args = ["submodule", "update", "--init", "--remote"]

[tasks.create-docker-engine]
ignore_errors = true
command = "docker"
args = [
    "buildx",
    "create",
    "--use",
    "--name",
    "docker-container",
    "--driver=docker-container",
]

[tasks.cross-image-mac_arm]
dependencies = ["get-cross-toolchains", "create-docker-engine"]
command = "cargo"
cwd = "./cross"
args = [
    "build-docker-image",
    "aarch64-apple-darwin-cross",
    "--tag",
    "local",
    "--build-arg",
    "MACOS_SDK_URL=https://storage.googleapis.com/ory.sh/build-assets/MacOSX11.3.sdk.tar.xz",
    "--cache-to",
    "${CACHE_TO}",
    "--cache-from",
    "${CACHE_FROM}",
    # Overriding git reference supplied by Github
    # to avoid unnecessary struggle with name of docker image
    "--ref-type",
    "branch",
    "--ref-name",
    "main",
]

[tasks.build-mac_arm]
dependencies = ["cross-image-mac_arm"]
command = "cross"
args = ["build", "--target", "aarch64-apple-darwin", "--release"]

[tasks.cross-image-mac_x86_64]
dependencies = ["get-cross-toolchains", "create-docker-engine"]
command = "cargo"
cwd = "./cross"
args = [
    "build-docker-image",
    "x86_64-apple-darwin-cross",
    "--tag",
    "local",
    "--build-arg",
    "MACOS_SDK_URL=https://github.com/joseluisq/macosx-sdks/releases/download/10.12/MacOSX10.12.sdk.tar.xz",
    "--cache-to",
    "${CACHE_TO}",
    "--cache-from",
    "${CACHE_FROM}",
    # Overriding git reference supplied by Github
    # to avoid unnecessary struggle with name of docker image
    "--ref-type",
    "branch",
    "--ref-name",
    "main",
]

[tasks.build-mac_x86_64]
dependencies = ["cross-image-mac_x86_64"]
command = "cross"
args = ["build", "--target", "x86_64-apple-darwin", "--release"]